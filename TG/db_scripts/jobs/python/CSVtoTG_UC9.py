import pyTigerGraph as tg
import pandas as pd
from datetime import datetime
import pytz

trx=pd.read_csv("Transactional_1_UC9.csv")
atm=pd.read_csv("REF_ATM_Machine_1_UC9.csv")
ib_loc=pd.read_csv("IBank_Trx_Location_1_UC9.csv")
ib_dev=pd.read_csv("REF_IBank_Device_1_UC9.csv")
mob_loc=pd.read_csv("Mobile_Trx_Location_1_UC9.csv")
mob_dev=pd.read_csv("REF_Mobile_Device_1_UC9.csv")
mob_tel=pd.read_csv("REF_Mobile_Telco_1_UC9.csv")

# Change Dataframe Data type according to vertex Data type
trx['Account_Debit_BSI_ID'] = trx['Account_Debit_BSI_ID'].astype(str)
trx['ATM_Card_ID'] = trx['ATM_Card_ID'].astype(str)
trx['ATM_Machine_ID'] = trx['ATM_Machine_ID'].astype(str)
trx['ATM_Trx_ID'] = trx['ATM_Trx_ID'].astype(str)
trx['ATM_Trx_Code'] = trx['ATM_Trx_Code'].astype(int)
trx['ATM_Trx_Type'] = trx['ATM_Trx_Type'].astype(str)
trx['ATM_Trx_Amount'] = trx['ATM_Trx_Amount'].astype(int)
trx['ATM_Trx_Datetime'] = trx['ATM_Trx_Datetime'].astype(str)
trx['Account_Debit_BSI_ID_ATM_Receiver'] = trx['Account_Debit_BSI_ID_ATM_Receiver'].astype(str)
trx['Mobile_App_ID'] = trx['Mobile_App_ID'].astype(str)
trx['Mobile_Location_ID'] = trx['Mobile_Location_ID'].astype(str)
trx['Mobile_App_Trx_ID'] = trx['Mobile_App_Trx_ID'].astype(str)
trx['Mobile_App_Trx_Code'] = trx['Mobile_App_Trx_Code'].astype(int)
trx['Mobile_App_Trx_Type'] = trx['Mobile_App_Trx_Type'].astype(str)
trx['Mobile_App_Trx_Amount'] = trx['Mobile_App_Trx_Amount'].astype(int)
trx['Mobile_App_Trx_Datetime'] = trx['Mobile_App_Trx_Datetime'].astype(str)
trx['Account_Debit_BSI_ID_Mobile_Receiver'] = trx['Account_Debit_BSI_ID_Mobile_Receiver'].astype(str)
trx['IBank_ID'] = trx['IBank_ID'].astype(str)
trx['IBank_IP_Address'] = trx['IBank_IP_Address'].astype(str)
trx['IBank_Trx_ID'] = trx['IBank_Trx_ID'].astype(str)
trx['IBank_Trx_Code'] = trx['IBank_Trx_Code'].astype(int)
trx['IBank_Trx_Type'] = trx['IBank_Trx_Type'].astype(str)
trx['IBank_Trx_Amount'] = trx['IBank_Trx_Amount'].astype(int)
trx['IBank_Trx_Datetime'] = trx['IBank_Trx_Datetime'].astype(str)
trx['Account_Debit_BSI_ID_IBank_Receiver'] = trx['Account_Debit_BSI_ID_IBank_Receiver'].astype(str)

atm['ATM_Machine_ID'] = atm['ATM_Machine_ID'].astype(str)
atm['ATM_Brand'] = atm['ATM_Brand'].astype(str)
atm['ATM_Type'] = atm['ATM_Type'].astype(str)
atm['ATM_Operation_Code'] = atm['ATM_Operation_Code'].astype(str)
atm['ATM_Operation_Time'] = atm['ATM_Operation_Time'].astype(str)
atm['ATM_Operation_Time_Start'] = atm['ATM_Operation_Time_Start'].astype(str)
atm['ATM_Operation_Time_End'] = atm['ATM_Operation_Time_End'].astype(str)
atm['ATM_Name'] = atm['ATM_Name'].astype(str)
atm['ATM_Latitude'] = atm['ATM_Latitude'].astype(float)
atm['ATM_Longitude'] = atm['ATM_Longitude'].astype(float)
atm['ATM_City'] = atm['ATM_City'].astype(str)
atm['ATM_Area'] = atm['ATM_Area'].astype(str)
atm['ATM_Address'] = atm['ATM_Address'].astype(str)

ib_loc['IBank_Device_ID'] = ib_loc['IBank_Device_ID'].astype(str)
ib_loc['IBank_IP_Address'] = ib_loc['IBank_IP_Address'].astype(str)
ib_loc['IBank_IP_Address_Range1'] = ib_loc['IBank_IP_Address_Range1'].astype(str)
ib_loc['IBank_IP_Address_Range2'] = ib_loc['IBank_IP_Address_Range2'].astype(str)
ib_loc['IBank_Inet_Provider'] = ib_loc['IBank_Inet_Provider'].astype(str)
ib_loc['IBank_Inet_Location'] = ib_loc['IBank_Inet_Location'].astype(str)
ib_loc['IBank_Inet_Latitude'] = ib_loc['IBank_Inet_Latitude'].astype(float)
ib_loc['IBank_Inet_Longitude'] = ib_loc['IBank_Inet_Longitude'].astype(float)

ib_dev['IBank_Device_ID'] =ib_dev['IBank_Device_ID'].astype(str)
ib_dev['IBank_Device_Type'] =ib_dev['IBank_Device_Type'].astype(str)

mob_loc['Mobile_Trx_Location_ID'] = mob_loc['Mobile_Trx_Location_ID'].astype(str)
mob_loc['Mobile_Device_ID'] = mob_loc['Mobile_Device_ID'].astype(str)
mob_loc['Mobile_GPS_Latitude'] = mob_loc['Mobile_GPS_Latitude'].astype(float)
mob_loc['Mobile_GPS_Longitude'] = mob_loc['Mobile_GPS_Longitude'].astype(float)
mob_loc['Mobile_GPS_City'] = mob_loc['Mobile_GPS_City'].astype(str)
mob_loc['Mobile_GPS_Area'] = mob_loc['Mobile_GPS_Area'].astype(str)

mob_dev['Mobile_Device_ID'] = mob_dev['Mobile_Device_ID'].astype(str)
mob_dev['Mobile_Telco_ID'] = mob_dev['Mobile_Telco_ID'].astype(str)
mob_dev['Mobile_Device_Brand'] = mob_dev['Mobile_Device_Brand'].astype(str)
mob_dev['Mobile_Device_OS_Type'] = mob_dev['Mobile_Device_OS_Type'].astype(str)
mob_dev['Mobile_Device_OS_Version'] = mob_dev['Mobile_Device_OS_Version'].astype(str)

mob_tel['Mobile_Telco_ID'] = mob_tel['Mobile_Telco_ID'].astype(str)
mob_tel['Mobile_Telco_Name'] = mob_tel['Mobile_Telco_Name'].astype(str)


conn = tg.TigerGraphConnection(host="http://192.168.100.8")
conn.graphname = "Graph_Practice_New"

# UPSERT VERTEX
## upsertVertexDataframe(df, vertexType, v_id=None, attributes=None)
### conn.upsertVertexDataframe(df=person, vertexType='person', v_id='name')

v_atm = conn.upsertVertexDataFrame(atm, "V_ATM_Machine", "ATM_Machine_ID", attributes= {"ATM_Machine_ID": "ATM_Machine_ID", "ATM_Brand":"ATM_Brand", "ATM_Type":"ATM_Type", "ATM_Operation_Code":"ATM_Operation_Code", "ATM_Operation_Time":"ATM_Operation_Time", "ATM_Operation_Time_Start":"ATM_Operation_Time_Start", "ATM_Operation_Time_End":"ATM_Operation_Time_End", "ATM_Operation_Time_End":"ATM_Operation_Time_End","ATM_Name": "ATM_Name","ATM_Latitude":"ATM_Latitude", "ATM_Longitude":"ATM_Longitude", "ATM_City":"ATM_City", "ATM_Area":"ATM_Area", "ATM_Address":"ATM_Address"})
print(str(v_atm) + " V_ATM_Machine VERTICES Upserted")
v_Mobile_Telco = conn.upsertVertexDataFrame(mob_tel, "V_Mobile_Telco", "Mobile_Telco_ID", attributes= {"Mobile_Telco_ID": "Mobile_Telco_ID", "Mobile_Telco_Name":"Mobile_Telco_Name"})
print(str(v_Mobile_Telco) + " V_Mobile_Telco VERTICES Upserted")
v_IBank_Device = conn.upsertVertexDataFrame(ib_dev, "V_IBank_Device", "IBank_Device_ID", attributes= {"IBank_Device_ID": "IBank_Device_ID", "IBank_Device_Type":"IBank_Device_Type"})
print(str(v_IBank_Device) + " V_IBank_Device VERTICES Upserted")
v_Mobile_Trx_Location = conn.upsertVertexDataFrame(mob_loc, "V_Mobile_Trx_Location", "Mobile_Trx_Location_ID", attributes= {"Mobile_Location_ID": "Mobile_Trx_Location_ID", "Mobile_GPS_Latitude":"Mobile_GPS_Latitude","Mobile_GPS_Longitude": "Mobile_GPS_Longitude", "Mobile_GPS_City":"Mobile_GPS_City", "Mobile_GPS_Area":"Mobile_GPS_Area"})
print(str(v_Mobile_Trx_Location) + " V_Mobile_Trx_Location VERTICES Upserted")
v_Mobile_Device = conn.upsertVertexDataFrame(mob_dev, "V_Mobile_Device", "Mobile_Device_ID", attributes= {"Mobile_Device_ID": "Mobile_Device_ID", "Mobile_Device_Brand":"Mobile_Device_Brand","Mobile_Device_OS_Type":"Mobile_Device_OS_Type","Mobile_Device_OS_Version":"Mobile_Device_OS_Version"})
print(str(v_Mobile_Device) + " V_Mobile_Device VERTICES Upserted")
v_IBank_Trx_Location = conn.upsertVertexDataFrame(ib_loc, "V_IBank_Trx_Location", "IBank_IP_Address", attributes= {"IBank_IP_Address": "IBank_IP_Address", "IBank_Inet_Location":"IBank_Inet_Location","IBank_IP_Address_Range1":"IBank_IP_Address_Range1","IBank_IP_Address_Range2":"IBank_IP_Address_Range2","IBank_Inet_Provider":"IBank_Inet_Provider", "IBank_Inet_Latitude":"IBank_Inet_Latitude", "IBank_Inet_Longitude":"IBank_Inet_Longitude"})
print(str(v_IBank_Trx_Location) + " V_IBank_Trx_Location VERTICES Upserted")
v_ATM_Trx = conn.upsertVertexDataFrame(trx, "V_ATM_Trx", "ATM_Trx_ID", attributes= {"ATM_Trx_ID": "ATM_Trx_ID", "ATM_Trx_Code":"ATM_Trx_Code","ATM_Trx_Type":"ATM_Trx_Type","ATM_Trx_Amount":"ATM_Trx_Amount","ATM_Trx_Datetime":"ATM_Trx_Datetime"})
print(str(v_ATM_Trx) + " V_ATM_Trx Upserted")
v_Mobile_App_Trx = conn.upsertVertexDataFrame(trx, "V_Mobile_App_Trx", "Mobile_App_Trx_ID", attributes= {"Mobile_App_Trx_ID": "Mobile_App_Trx_ID", "Mobile_App_Trx_Code":"Mobile_App_Trx_Code","Mobile_App_Trx_Type":"Mobile_App_Trx_Type","Mobile_App_Trx_Amount":"Mobile_App_Trx_Amount","Mobile_App_Trx_Datetime":"Mobile_App_Trx_Datetime"})
print(str(v_Mobile_App_Trx) + " V_Mobile_App_Trx Upserted")
v_IBank_Trx = conn.upsertVertexDataFrame(trx, "V_IBank_Trx", "IBank_Trx_ID", attributes= {"IBank_Trx_ID": "IBank_Trx_ID", "IBank_Trx_Code":"IBank_Trx_Code","IBank_Trx_Type":"IBank_Trx_Type","IBank_Trx_Amount":"IBank_Trx_Amount","IBank_Trx_Datetime":"IBank_Trx_Datetime"})
print(str(v_IBank_Trx) + " V_IBank_Trx Upserted")
v_Account_Debit_BSI = conn.upsertVertexDataFrame(trx, "V_Account_Debit_BSI", "Account_Debit_BSI_ID", attributes= {"Account_ID":"Account_Debit_BSI_ID"})
print(str(v_Account_Debit_BSI) + " V_Account_Debit_BSI Upserted")

## If your Dataframe has receiver account value use this
# v_Account_Debit_BSI = conn.upsertVertexDataFrame(trx, "V_Account_Debit_BSI", "Account_Debit_BSI_ID_ATM_Receiver", attributes= {"Account_ID":"Account_Debit_BSI_ID_ATM_Receiver"})
# print(str(v_Account_Debit_BSI) + " V_Account_Debit_BSI Upserted")
# v_Account_Debit_BSI = conn.upsertVertexDataFrame(trx, "V_Account_Debit_BSI", "Account_Debit_BSI_ID_Mobile_Receiver", attributes= {"Account_ID":"Account_Debit_BSI_ID_Mobile_Receiver"})
# print(str(v_Account_Debit_BSI) + " V_Account_Debit_BSI Upserted")
# v_Account_Debit_BSI = conn.upsertVertexDataFrame(trx, "V_Account_Debit_BSI", "Account_Debit_BSI_ID_IBank_Receiver", attributes= {"Account_ID":"Account_Debit_BSI_ID_IBank_Receiver"})
# print(str(v_Account_Debit_BSI) + " V_Account_Debit_BSI Upserted")


# UPSERT EDGE
## upsertEdgesDataframe(df, sourceVertexType, edgeType, targetVertexType, from_id=None, to_id=None, attributes=None)

e_Located_Mobile = conn.upsertEdgeDataFrame ( mob_loc, "V_Mobile_Trx_Location", "E_Located_Mobile", "V_Mobile_Device", from_id="Mobile_Trx_Location_ID", to_id="Mobile_Device_ID", attributes={})
print(str(e_Located_Mobile) + " E_Located_Mobile EDGES Upserted")
e_Use_Mobile_Telco = conn.upsertEdgeDataFrame ( mob_dev, "V_Mobile_Device", "E_Use_Mobile_Telco", "V_Mobile_Telco", from_id="Mobile_Device_ID", to_id="Mobile_Telco_ID", attributes={})
print(str(e_Use_Mobile_Telco) + " E__Use_Mobile_Telco EDGES Upserted")
e_Use_Device = conn.upsertEdgeDataFrame ( ib_loc, "V_IBank_Trx_Location", "E_Use_Device", "V_IBank_Device", from_id="IBank_IP_Address", to_id="IBank_Device_ID", attributes={})
print(str(e_Use_Device) + " E_Use_Device EDGES Upserted")
e_ATM_Send = conn.upsertEdgeDataFrame (trx, "V_Account_Debit_BSI", "E_ATM_Send", "V_ATM_Trx", from_id="Account_Debit_BSI_ID", to_id="ATM_Trx_ID", attributes={})
print(str(e_ATM_Send) + " E_ATM_Send EDGES Upserted")
e_Use_Machine = conn.upsertEdgeDataFrame (trx, "V_ATM_Trx", "E_Use_Machine", "V_ATM_Machine", from_id="ATM_Trx_ID", to_id="ATM_Machine_ID", attributes={})
print(str(e_Use_Machine) + " E_Use_Machine EDGES Upserted")
e_Use_ATM_Card = conn.upsertEdgeDataFrame (trx, "V_ATM_Trx", "E_Use_ATM_Card", "V_ATM_Card_REF", from_id="ATM_Trx_ID", to_id="ATM_Card_ID", attributes={})
print(str(e_Use_ATM_Card) + " E_Use_ATM_Card EDGES Upserted")
e_Owns_ATM_Card = conn.upsertEdgeDataFrame (trx, "V_Account_Debit_BSI", "E_Owns_ATM_Card", "V_ATM_Card_REF", from_id="Account_Debit_BSI_ID", to_id="ATM_Card_ID", attributes={})
print(str(e_Owns_ATM_Card) + " E_Owns_ATM_Card")
e_Mobile_Send = conn.upsertEdgeDataFrame (trx, "V_Account_Debit_BSI", "E_Mobile_Send", "V_Mobile_App_Trx", from_id="Account_Debit_BSI_ID", to_id="Mobile_App_Trx_ID", attributes={})
print(str(e_Mobile_Send) + " E_Mobile_Send EDGES Upserted")
e_Mobile_Trx_Loc = conn.upsertEdgeDataFrame (trx, "V_Mobile_App_Trx", "E_Mobile_Trx_Loc", "V_Mobile_Trx_Location", from_id="Mobile_App_Trx_ID", to_id="Mobile_Location_ID", attributes={})
print(str(e_Mobile_Trx_Loc) + " E_Mobile_Trx_Loc EDGES Upserted")
e_Use_Mobile_App = conn.upsertEdgeDataFrame (trx, "V_Mobile_App_Trx", "E_Use_Mobile_App", "V_Mobile_App_REF", from_id="Mobile_App_Trx_ID", to_id="Mobile_App_ID", attributes={})
print(str(e_Use_Mobile_App) + " E_Use_Mobile_App EDGES Upserted")
e_Owns_Mobile_App = conn.upsertEdgeDataFrame (trx, "V_Account_Debit_BSI", "E_Owns_Mobile_App", "V_Mobile_App_REF", from_id="Account_Debit_BSI_ID", to_id="Mobile_App_ID", attributes={})
print(str(e_Owns_ATM_Card) + " E_Owns_Mobile_App")
e_IBank_Send = conn.upsertEdgeDataFrame (trx, "V_Account_Debit_BSI", "E_IBank_Send", "V_IBank_Trx", from_id="Account_Debit_BSI_ID", to_id="IBank_Trx_ID", attributes={})
print(str(e_IBank_Send) + " E_IBank_Send EDGES Upserted")
e_IBank_Trx_Loc = conn.upsertEdgeDataFrame (trx, "V_IBank_Trx", "E_IBank_Trx_Loc", "V_IBank_Trx_Location", from_id="IBank_Trx_ID", to_id="IBank_IP_Address", attributes={})
print(str(e_IBank_Trx_Loc) + " E_IBank_Trx_Loc EDGES Upserted")
e_Use_IBank = conn.upsertEdgeDataFrame (trx, "V_IBank_Trx", "E_Use_IBank", "V_IBank_REF", from_id="Mobile_App_Trx_ID", to_id="IBank_ID", attributes={})
print(str(e_Use_IBank) + " E_Use_IBank EDGES Upserted")
e_Owns_IBank = conn.upsertEdgeDataFrame (trx, "V_Account_Debit_BSI", "E_Owns_IBank", "V_IBank_REF", from_id="Account_Debit_BSI_ID", to_id="IBank_ID", attributes={})
print(str(e_Owns_IBank) + " E_Owns_IBank Upserted")
