{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 10,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "flowchartsData": {
        "flowcharts": [
          {
            "allowDrawio": false,
            "center": true,
            "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
            "download": false,
            "editorTheme": "dark",
            "editorUrl": "https://www.draw.io",
            "enableAnim": true,
            "grid": false,
            "lock": true,
            "name": "Main",
            "scale": true,
            "tooltip": true,
            "type": "xml",
            "url": "http://<YourUrl>/<Your XML/drawio file/api>",
            "xml": "<mxfile host=\"app.diagrams.net\" modified=\"2023-01-11T01:14:44.619Z\" agent=\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36\" etag=\"dtiZkt4Dj8tSJZByvstK\" version=\"20.8.3\" type=\"embed\"><diagram id=\"E3KOEkjW3ot3PY4WedB_\" name=\"Page-1\"></diagram></mxfile>",
            "zoom": "100%"
          }
        ]
      },
      "format": "short",
      "graphId": "flowchart_12",
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "newFlag": false,
      "rulesData": {
        "rulesData": [
          {
            "aggregation": "total",
            "alias": "myRule",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "Count_Sender",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 0,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "table",
            "order": 1,
            "overlayIcon": false,
            "pattern": "Count_Sender",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [
              "/.*/",
              "/.*/"
            ],
            "textData": [
              {
                "hidden": false,
                "pattern": "35",
                "textOn": "wmd",
                "textPattern": "/.*/",
                "textReplace": "content"
              }
            ],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [
              50,
              80
            ],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          }
        ]
      },
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "builder",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawSql": "SELECT * FROM uc04_data.results LIMIT 50 ",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "*",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "Count_Sender",
            "mode": "reduceRow",
            "reduce": {
              "include": [
                "Account_Sender"
              ],
              "reducer": "distinctCount"
            }
          }
        }
      ],
      "transparent": true,
      "type": "agenty-flowcharting-panel",
      "valueName": "current",
      "version": "0.9.0"
    },
    {
      "datasource": {
        "type": "yesoreyeram-infinity-datasource",
        "uid": "naFi7qtVk"
      },
      "gridPos": {
        "h": 4,
        "w": 22,
        "x": 2,
        "y": 0
      },
      "id": 22,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<h3 style=\"font-weight: bold; font-family: sans-serif;\">Multi-channel Fraud Detection 1</h3>\n<hr style=\"height:2px;border-width:0;color:gray;background-color:gray\">\n<h4 style=\"font-weight: bold; font-family: sans-serif;\">Objectives:</h4>\n<h6 style=\"font-family: sans-serif; text-align: justify\">Deteksi transaksi transfer semua channel (ATM, MobileApp, IBank) dari beberapa account ke dalam satu account (BSI / Non BSI) yang sama dengan total nominal minimal ≥ 100jt rupiah dalam kurun waktu 1 jam\n</h6>",
        "mode": "html"
      },
      "pluginVersion": "9.3.2",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#6b0914",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 0,
        "y": 4
      },
      "id": 16,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "/^Total_Account_Sender$/",
          "values": false
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "code",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawQuery": true,
          "rawSql": "SELECT COUNT(DISTINCT(Account_Sender)) AS Total_Account_Sender FROM uc04_data.results",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "Account_Sender",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Total Suspected Account",
      "transformations": [],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#5f5302",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 6,
        "y": 4
      },
      "id": 36,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "code",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawQuery": true,
          "rawSql": "SELECT COUNT(DISTINCT(Account_Receiver)) AS Total_Account_Receiver FROM uc04_data.results",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "Account_Receiver",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Total Account Receiver",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#0a5900",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 12,
        "y": 4
      },
      "id": 20,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "/^Total_Transaction_Frequency$/",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "builder",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawSql": "SELECT COUNT(ATM_Trx_ID), COUNT(IBank_Trx_ID), COUNT(Mobile_Trx_ID) FROM uc04_data.results LIMIT 50 ",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "name": "COUNT",
                "parameters": [
                  {
                    "name": "ATM_Trx_ID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "COUNT",
                "parameters": [
                  {
                    "name": "IBank_Trx_ID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "COUNT",
                "parameters": [
                  {
                    "name": "Mobile_Trx_ID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Total Anomaly Transaction Frequency (Cumulative)",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "Total_Transaction_Frequency",
            "mode": "reduceRow",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#6b0914",
            "mode": "fixed"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyIDR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 18,
        "y": 4
      },
      "id": 8,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value_and_name"
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "builder",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawSql": "SELECT SUM(ATM_Trx_Amount), SUM(Mobile_Trx_Amount), SUM(IBank_Trx_Amount) FROM uc04_data.results LIMIT 50 ",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ATM_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "Mobile_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "IBank_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Total Transaction Amount",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "Total_Transaction_Amount",
            "mode": "reduceRow",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "SUM(ATM_Trx_Amount)": true,
              "SUM(IBank_Trx_Amount)": true,
              "SUM(Mobile_Trx_Amount)": true
            },
            "indexByName": {},
            "renameByName": {}
          }
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "flowchartsData": {
        "flowcharts": [
          {
            "allowDrawio": false,
            "center": true,
            "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
            "download": false,
            "editorTheme": "dark",
            "editorUrl": "https://www.draw.io",
            "enableAnim": true,
            "grid": false,
            "lock": true,
            "name": "Main",
            "scale": true,
            "tooltip": true,
            "type": "xml",
            "url": "http://<YourUrl>/<Your XML/drawio file/api>",
            "xml": "<mxfile host=\"app.diagrams.net\" modified=\"2023-01-11T01:11:00.142Z\" agent=\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36\" etag=\"gTsRHUy3gvdUb1JHeX8Q\" version=\"20.8.3\" type=\"embed\"><diagram id=\"9fyN66GpXSd5G-hMEYzt\" name=\"Page-1\"></diagram></mxfile>",
            "zoom": "100%"
          }
        ]
      },
      "format": "short",
      "graphId": "flowchart_24",
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 7
      },
      "id": 24,
      "newFlag": false,
      "rulesData": {
        "rulesData": [
          {
            "aggregation": "total",
            "alias": "myRule",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "COUNT(Gender)",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 0,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "table",
            "order": 1,
            "overlayIcon": false,
            "pattern": ".*",
            "rangeData": [],
            "reduce": true,
            "refId": "B",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [
              "/.*/",
              "/.*/"
            ],
            "textData": [
              {
                "hidden": false,
                "pattern": "36",
                "textOn": "wmd",
                "textPattern": "/.*/",
                "textReplace": "content"
              }
            ],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [
              50,
              80
            ],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          }
        ]
      },
      "targets": [
        {
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT Gender, COUNT(Gender) FROM uc04_data.account_details WHERE Gender = \"Male\"",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "account_details"
        }
      ],
      "title": "Suspected Account by Gender",
      "transformations": [],
      "transparent": true,
      "type": "agenty-flowcharting-panel",
      "valueName": "current",
      "version": "0.9.0"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#940314",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 100,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyIDR"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 14,
        "x": 4,
        "y": 7
      },
      "id": 30,
      "options": {
        "barRadius": 0.15,
        "barWidth": 0.48,
        "colorByField": "Account_Receiver",
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "orientation": "horizontal",
        "showValue": "always",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        },
        "xField": "Account_Receiver",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "code",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawQuery": true,
          "rawSql": "SELECT Account_Receiver, ATM_Trx_Amount, Mobile_Trx_Amount, IBank_Trx_Amount FROM uc04_data.results LIMIT 3",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "Account_Receiver",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "ATM_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "Mobile_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "IBank_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "Top 3 Account Receiver (Suspected Account)",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "ATM_Trx_Amount": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Account_Receiver": {
                "aggregations": [],
                "operation": "groupby"
              },
              "IBank_Trx_Amount": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "Mobile_Trx_Amount": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "calculateField",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "ATM_Trx_Amount (sum)": true,
              "IBank_Trx_Amount (sum)": true,
              "Mobile_Trx_Amount (sum)": true
            },
            "indexByName": {},
            "renameByName": {}
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Total"
              }
            ]
          }
        }
      ],
      "transparent": true,
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#6b0914",
                "value": null
              },
              {
                "color": "light-yellow",
                "value": 0
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 18,
        "y": 7
      },
      "id": 18,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "first"
          ],
          "fields": "/^SUM\\(ATM_Trx_Amount\\) / Total \\* 100$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "builder",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawSql": "SELECT SUM(ATM_Trx_Amount), SUM(IBank_Trx_Amount), SUM(Mobile_Trx_Amount) FROM uc04_data.results LIMIT 50 ",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ATM_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "IBank_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "Mobile_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": " %ATM Transaction Amount ",
      "transformations": [
        {
          "id": "calculateField",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "SUM(ATM_Trx_Amount)",
              "operator": "/",
              "reducer": "sum",
              "right": "Total"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "SUM(ATM_Trx_Amount) / Total",
              "operator": "*",
              "reducer": "sum",
              "right": "100"
            },
            "mode": "binary",
            "reduce": {
              "include": [
                "SUM(ATM_Trx_Amount) / Total"
              ],
              "reducer": "sum"
            }
          }
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "flowchartsData": {
        "flowcharts": [
          {
            "allowDrawio": false,
            "center": true,
            "csv": "## See more information for the syntax at https://drawio-app.com/import-from-csv-to-drawio/\n##\n## Example CSV. Use ## for comments and # for configuration.\n## The following names are reserved and should not be used (or ignored):\n## id, tooltip, placeholder(s), link and label (see below)\n##\n#\n## Node label with placeholders and HTML.\n## Default is '%name_of_first_column%'.\n#\n# label: %name%<br><i style=\"color:gray;\">%position%</i><br><a href=\"mailto:%email%\">Email</a>\n#\n## Node style (placeholders are replaced once).\n## Default is the current style for nodes.\n#\n# style: label;image=%image%;whiteSpace=wrap;html=1;rounded=1;fillColor=%fill%;strokeColor=%stroke%;\n#\n## Parent style for nodes with child nodes (placeholders are replaced once).\n#\n# parentstyle: swimlane;whiteSpace=wrap;html=1;childLayout=stackLayout;horizontal=1;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;\n#\n## Optional column name that contains a reference to a named style in styles.\n## Default is the current style for nodes.\n#\n# stylename: -\n#\n## JSON for named styles of the form {\"name\": \"style\", \"name\": \"style\"} where style is a cell style with\n## placeholders that are replaced once.\n#\n# styles: -\n#\n## Optional column name that contains a reference to a named label in labels.\n## Default is the current label.\n#\n# labelname: -\n#\n## JSON for named labels of the form {\"name\": \"label\", \"name\": \"label\"} where label is a cell label with\n## placeholders.\n#\n# labels: -\n#\n## Uses the given column name as the identity for cells (updates existing cells).\n## Default is no identity (empty value or -).\n#\n# identity: -\n#\n## Uses the given column name as the parent reference for cells. Default is no parent (empty or -).\n## The identity above is used for resolving the reference so it must be specified.\n#\n# parent: -\n#\n## Adds a prefix to the identity of cells to make sure they do not collide with existing cells (whose\n## IDs are numbers from 0..n, sometimes with a GUID prefix in the context of realtime collaboration).\n## Default is csvimport-.\n#\n# namespace: csvimport-\n#\n## Connections between rows (\"from\": source colum, \"to\": target column).\n## Label, style and invert are optional. Defaults are '', current style and false.\n## If placeholders are used in the style, they are replaced with data from the source.\n## An optional placeholders can be set to target to use data from the target instead.\n## In addition to label, an optional fromlabel and tolabel can be used to name the column\n## that contains the text for the label in the edges source or target (invert ignored).\n## The label is concatenated in the form fromlabel + label + tolabel if all are defined.\n## The target column may contain a comma-separated list of values.\n## Multiple connect entries are allowed.\n#\n# connect: {\"from\": \"manager\", \"to\": \"name\", \"invert\": true, \"label\": \"manages\", \\\n#          \"style\": \"curved=1;endArrow=blockThin;endFill=1;fontSize=11;\"}\n# connect: {\"from\": \"refs\", \"to\": \"id\", \"style\": \"curved=1;fontSize=11;\"}\n#\n## Node x-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# left: \n#\n## Node y-coordinate. Possible value is a column name. Default is empty. Layouts will\n## override this value.\n#\n# top: \n#\n## Node width. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the width. Default is auto.\n#\n# width: auto\n#\n## Node height. Possible value is a number (in px), auto or an @ sign followed by a column\n## name that contains the value for the height. Default is auto.\n#\n# height: auto\n#\n## Padding for autosize. Default is 0.\n#\n# padding: -12\n#\n## Comma-separated list of ignored columns for metadata. (These can be\n## used for connections and styles but will not be added as metadata.)\n#\n# ignore: id,image,fill,stroke,refs,manager\n#\n## Column to be renamed to link attribute (used as link).\n#\n# link: url\n#\n## Spacing between nodes. Default is 40.\n#\n# nodespacing: 40\n#\n## Spacing between levels of hierarchical layouts. Default is 100.\n#\n# levelspacing: 100\n#\n## Spacing between parallel edges. Default is 40. Use 0 to disable.\n#\n# edgespacing: 40\n#\n## Name or JSON of layout. Possible values are auto, none, verticaltree, horizontaltree,\n## verticalflow, horizontalflow, organic, circle or a JSON string as used in Layout, Apply.\n## Default is auto.\n#\n# layout: auto\n#\n## ---- CSV below this line. First line are column names. ----\nname,position,id,location,manager,email,fill,stroke,refs,url,image\nEvan Miller,CFO,emi,Office 1,,me@example.com,#dae8fc,#6c8ebf,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-9-2-128.png\nEdward Morrison,Brand Manager,emo,Office 2,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-10-3-128.png\nRon Donovan,System Admin,rdo,Office 3,Evan Miller,me@example.com,#d5e8d4,#82b366,\"emo,tva\",https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-2-128.png\nTessa Valet,HR Director,tva,Office 4,Evan Miller,me@example.com,#d5e8d4,#82b366,,https://www.draw.io,https://cdn3.iconfinder.com/data/icons/user-avatars-1/512/users-3-128.png\n",
            "download": false,
            "editorTheme": "dark",
            "editorUrl": "https://www.draw.io",
            "enableAnim": true,
            "grid": false,
            "lock": true,
            "name": "Main",
            "scale": true,
            "tooltip": true,
            "type": "xml",
            "url": "http://<YourUrl>/<Your XML/drawio file/api>",
            "xml": "<mxfile host=\"app.diagrams.net\" modified=\"2023-01-11T01:03:45.746Z\" agent=\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36\" version=\"20.8.3\" etag=\"MLwnpM6RusNFGmsrUd16\" type=\"embed\"><diagram id=\"6t6IssjEIl_t0ieaIRqD\" name=\"Page-1\">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</diagram></mxfile>",
            "zoom": "100%"
          }
        ]
      },
      "format": "short",
      "graphId": "flowchart_34",
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 11
      },
      "id": 34,
      "newFlag": false,
      "rulesData": {
        "rulesData": [
          {
            "aggregation": "total",
            "alias": "myRule",
            "colors": [
              "rgba(245, 54, 54, 0.9)",
              "rgba(237, 129, 40, 0.89)",
              "rgba(50, 172, 45, 0.97)"
            ],
            "column": "COUNT(Gender)",
            "dateFormat": "YYYY-MM-DD HH:mm:ss",
            "decimals": 0,
            "eventData": [],
            "eventProp": "id",
            "eventRegEx": false,
            "gradient": false,
            "hidden": false,
            "invert": false,
            "linkData": [],
            "linkProp": "id",
            "linkRegEx": true,
            "mappingType": 1,
            "metricType": "table",
            "order": 1,
            "overlayIcon": false,
            "pattern": ".*",
            "rangeData": [],
            "reduce": true,
            "refId": "A",
            "sanitize": false,
            "shapeData": [],
            "shapeProp": "id",
            "shapeRegEx": true,
            "stringThresholds": [
              "/.*/",
              "/.*/"
            ],
            "textData": [
              {
                "hidden": false,
                "pattern": "34",
                "textOn": "wmd",
                "textPattern": "/.*/",
                "textReplace": "content"
              }
            ],
            "textProp": "id",
            "textRegEx": true,
            "thresholds": [
              50,
              80
            ],
            "tooltip": false,
            "tooltipColors": false,
            "tooltipLabel": "",
            "tooltipOn": "a",
            "tpDirection": "v",
            "tpGraph": false,
            "tpGraphScale": "linear",
            "tpGraphSize": "100%",
            "tpGraphType": "line",
            "type": "number",
            "unit": "short",
            "valueData": []
          }
        ]
      },
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "code",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawQuery": true,
          "rawSql": "SELECT COUNT(Gender) FROM uc04_data.account_details WHERE Gender = \"Female\"",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "Gender",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "account_details",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "transparent": true,
      "type": "agenty-flowcharting-panel",
      "valueName": "current",
      "version": "0.9.0"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "blue",
                "value": 0
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 18,
        "y": 12
      },
      "id": 28,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^SUM\\(IBank_Trx_Amount\\) / Total \\* 100$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "builder",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawSql": "SELECT SUM(ATM_Trx_Amount), SUM(IBank_Trx_Amount), SUM(Mobile_Trx_Amount) FROM uc04_data.results LIMIT 50 ",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ATM_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "IBank_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "Mobile_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "%Internet Banking Transaction Amount",
      "transformations": [
        {
          "id": "calculateField",
          "options": {}
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "SUM(IBank_Trx_Amount)",
              "operator": "/",
              "reducer": "sum",
              "right": "Total"
            },
            "mode": "binary",
            "reduce": {
              "include": [
                "SUM(IBank_Trx_Amount)"
              ],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "SUM(IBank_Trx_Amount) / Total",
              "operator": "*",
              "reducer": "sum",
              "right": "100"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": true,
            "inspect": false
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Account_Receiver"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Details_AccountReceiver",
                    "url": "\r\nhttp://localhost:3000/d/oWvtV0hVz/uc04_multichannel_fraud1_details?orgId=1&var-Filter_Receiver=${__data.fields.Account_Receiver}&from=1673341136118&to=1673362736118"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total_Transaction"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyIDR"
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 18,
        "x": 0,
        "y": 14
      },
      "id": 32,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Anomaly Datetime"
          }
        ]
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "code",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawQuery": true,
          "rawSql": "SELECT Anomaly_Datetime, Account_Receiver, Account_Sender, ATM_Trx_ID, Mobile_Trx_ID, IBank_Trx_ID, Total_Transaction FROM uc04_data.results WHERE Account_Receiver IN ($Filter_Receiver) AND Account_Sender IN ($Filter_Sender) \r\nAND (ATM_Trx_ID IN ($Filter_TransactionID) OR Mobile_Trx_ID IN ($Filter_TransactionID) OR IBank_Trx_ID IN ($Filter_TransactionID))",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "Anomaly_Datetime",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "Account_Receiver",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "Account_Sender",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "ATM_Trx_ID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "Mobile_Trx_ID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "IBank_Trx_ID",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "Total_Transaction",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "All Detected Multichannel Transaction",
      "transformations": [
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "Anomaly_Datetime"
              }
            ]
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "ATM_Trx_ID": "ATM Transaction ID",
              "Account_Receiver": "Account Receiver",
              "Account_Sender": "Account Sender",
              "Anomaly_Datetime": "Anomaly Datetime",
              "IBank_Trx_ID": "IBank Transaction ID",
              "Mobile_Trx_ID": "Mobile Transaction ID",
              "Total_Transaction": "Total Transaction"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "Av4SrO24z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 18,
        "y": 17
      },
      "id": 26,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "/^SUM\\(Mobile_Trx_Amount\\) / Total \\* 100$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "columns": [],
          "dataset": "uc04_data",
          "datasource": {
            "type": "mysql",
            "uid": "Av4SrO24z"
          },
          "editorMode": "builder",
          "filters": [],
          "format": "table",
          "global_query_id": "",
          "rawSql": "SELECT SUM(Mobile_Trx_Amount), SUM(ATM_Trx_Amount), SUM(IBank_Trx_Amount) FROM uc04_data.results LIMIT 50 ",
          "refId": "A",
          "root_selector": "",
          "source": "url",
          "sql": {
            "columns": [
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "Mobile_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "ATM_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "name": "SUM",
                "parameters": [
                  {
                    "name": "IBank_Trx_Amount",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "results",
          "type": "json",
          "url": "https://github.com/yesoreyeram/grafana-infinity-datasource/blob/main/testdata/users.json",
          "url_options": {
            "data": "",
            "method": "GET"
          }
        }
      ],
      "title": "%Mobile Application Transaction Amount",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "mode": "reduceRow",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "SUM(Mobile_Trx_Amount)",
              "operator": "/",
              "reducer": "sum",
              "right": "Total"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "SUM(Mobile_Trx_Amount) / Total",
              "operator": "*",
              "reducer": "sum",
              "right": "100"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "transparent": true,
      "type": "gauge"
    }
  ],
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "mysql",
          "uid": "Av4SrO24z"
        },
        "definition": "SELECT ATM_Trx_ID, Mobile_Trx_ID, IBank_Trx_ID FROM uc04_data.results WHERE ATM_Trx_ID != \"\" AND Mobile_Trx_ID != \"\" AND IBank_Trx_ID != \"\"",
        "hide": 0,
        "includeAll": true,
        "label": "Transaction ID",
        "multi": true,
        "name": "Filter_TransactionID",
        "options": [],
        "query": "SELECT ATM_Trx_ID, Mobile_Trx_ID, IBank_Trx_ID FROM uc04_data.results WHERE ATM_Trx_ID != \"\" AND Mobile_Trx_ID != \"\" AND IBank_Trx_ID != \"\"",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "DCA111126",
          "value": "DCA111126"
        },
        "datasource": {
          "type": "mysql",
          "uid": "Av4SrO24z"
        },
        "definition": "SELECT Account_Receiver FROM uc04_data.results",
        "hide": 0,
        "includeAll": true,
        "label": "Account Receiver",
        "multi": true,
        "name": "Filter_Receiver",
        "options": [],
        "query": "SELECT Account_Receiver FROM uc04_data.results",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "DCA111109",
          "value": "DCA111109"
        },
        "datasource": {
          "type": "mysql",
          "uid": "Av4SrO24z"
        },
        "definition": "SELECT Account_Sender FROM uc04_data.results",
        "hide": 0,
        "includeAll": true,
        "label": "Account Sender",
        "multi": true,
        "name": "Filter_Sender",
        "options": [],
        "query": "SELECT Account_Sender FROM uc04_data.results",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "UC04_Multichannel_Fraud1",
  "uid": "2tQSaThVz",
  "version": 142,
  "weekStart": ""
}